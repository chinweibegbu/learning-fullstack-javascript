- Error stack trace: a printed message containing information about where the error occurred, what type of error was thrown, and a description of the error e.g.
>>  /home/ccuser/workspace/learn-javascript-debugging-code/script.js:5
    if (numberSum > total;) {
                        ^
                
    SyntaxError: Unexpected token ;

- Error types in JS (see this link: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error):
    (1) SyntaxError: Creates an instance representing a syntax error
    (2) ReferenceError: Creates an instance representing an error that occurs when de-referencing an invalid reference
    (3) TypeError: Creates an instance representing an error that occurs when a variable or parameter is not of a valid type
    (4) EvalError: Creates an instance representing an error that occurs regarding the global function eval()
    (5) RangeError: Creates an instance representing an error that occurs when a numeric variable or parameter is outside its valid range
    (6) URIError: Creates an instance representing an error that occurs when encodeURI() or decodeURI() are passed invalid parameters
    (7) AggregateError: Creates an instance representing several errors wrapped in a single error when multiple errors need to be reported by an operation, for example by Promise.any()

- "A lack of thrown errors does not mean your code logic is completely correct."